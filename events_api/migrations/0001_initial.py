# Generated by Django 2.0.7 on 2019-04-25 10:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('collabo_events', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_address', models.EmailField(blank=True, max_length=254, unique=True)),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('exptime', models.DateTimeField(blank=True, null=True)),
                ('is_previously_logged_in', models.BooleanField(default=False)),
                ('user_device', models.CharField(choices=[('N', None), ('ARD', 'ANDROID DEVICE'), ('IOS', 'IOS DEVICE')], default='N', max_length=128)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItems',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=200)),
                ('item_description', models.TextField(max_length=90)),
                ('item_price', models.FloatField()),
                ('additional_charge', models.FloatField(blank=True, default=0.0)),
                ('discounted_price', models.FloatField(blank=True, null=True)),
                ('discount_rate', models.PositiveIntegerField(blank=True, default=0)),
                ('count', models.IntegerField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Order Event Item',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ticket_code', models.CharField(blank=True, max_length=6, null=True)),
                ('ticket_type', models.CharField(blank=True, max_length=10, null=True)),
                ('is_order_seller', models.BooleanField(default=False, verbose_name='Booked Through Seller')),
                ('order_no', models.CharField(blank=True, max_length=100)),
                ('cust_name', models.CharField(blank=True, max_length=30)),
                ('cust_email', models.EmailField(blank=True, max_length=254)),
                ('cust_phone', models.CharField(blank=True, max_length=12)),
                ('ordercreatedtime', models.DateTimeField(auto_now_add=True)),
                ('grandtotal', models.FloatField(default=0.0)),
                ('razorpay_order_id', models.CharField(blank=True, max_length=100)),
                ('order_status', models.CharField(choices=[('OF', 'Order Failed due to errors'), ('OC', 'Order Created')], default='OF', max_length=2)),
                ('payment_status', models.CharField(choices=[('PP', 'Payment Pending'), ('PC', 'Payment Complete'), ('PF', 'Payment Failed')], default='PP', max_length=2)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100)),
                ('event', models.ForeignKey(blank=True, max_length=200, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collabo_events.Event')),
            ],
            options={
                'verbose_name_plural': 'Order Event',
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.IntegerField(blank=True)),
                ('commission', models.FloatField(null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collabo_events.Event')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='orders',
            name='seller',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events_api.Seller'),
        ),
        migrations.AddField(
            model_name='orders',
            name='slot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collabo_events.Slot'),
        ),
        migrations.AddField(
            model_name='orders',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='orderitems',
            name='io_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='io_id', to='events_api.Orders'),
        ),
        migrations.AddField(
            model_name='orderitems',
            name='pc_cat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collabo_events.Price_Category'),
        ),
        migrations.AddField(
            model_name='orderitems',
            name='pc_slot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collabo_events.SlotPC'),
        ),
    ]
